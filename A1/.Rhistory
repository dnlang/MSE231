lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,1.9e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,1.9e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.2e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.2e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.1e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.1e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.15e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.15e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.05e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.05e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
axis(2, at=1:12) # Change x labels to month abbreviations
axis(0, at=1:12) # Change x labels to month abbreviations
# plot the counts for each month normalized by the population percentage
plot(month_fac,1e6*month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed")
lines(month_fac,1e6*black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,1e6*white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,1e6*hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,1e6*asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,1e6*nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,1e6*un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.05e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.05e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015")
legend(4,2.05e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.05e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
# plot the counts for each month normalized by the population percentage
plot(month_fac,month_cnts[month.name]/308745538, xlab = "", xaxt = "n", ylab = "Percentage of People Killed", ylim = c(0,2e-6))
lines(month_fac,black_cnts[month.name]/38929319, col = "black", pch = 19, type = "o")
lines(month_fac,white_cnts[month.name]/196817552, col = "bisque2", pch = 19, type = "o")
lines(month_fac,hisp_cnts[month.name]/50477594, col = "chocolate", pch = 19, type = "o")
lines(month_fac,asian_cnts[month.name]/14465124, col = "darkgoldenrod1", pch = 19, type = "o")
lines(month_fac,nat_cnts[month.name]/(2247098+481576), col = "coral4", pch = 19, type = "o")
lines(month_fac,un_cnts[month.name]/(604265+5966481), col = "azure4", pch = 19, type = "o")
minor.tick(ny=2, tick.ratio=0.5)
axis(1, at=1:12, labels=month.abb) # Change x labels to month abbreviations
title(main="People Killed by Police in 2015 - Normalized for Demographic Polulation")
legend(4,2.05e-6, c("White", "Black", "Hispanic", "Asian", "Native American", "Unknown"),
col = c("bisque2", "black", "chocolate", "darkgoldenrod1", "coral4", "azure4"), lty = c(1,1,1,1,1,1),
pch = c(19, 19, 19, 19, 19, 19), ncol = 3, box.lty=0)
legend(0.1,2.05e-6, c("Total Killed"), col = c("black"), lty = c(1), lwd = c(3), box.lty=0)
grid(0,NULL)
robotSoundPilot <- read.csv("~/Desktop/robotSoundPilot.csv")
View(robotSoundPilot)
# Scatterplot Matrices from the car Package
library(car)
scatterplot.matrix(~mpg+disp+drat+wt|cyl, data=mtcars,
main="Three Cylinder Options")
install.packages("car")
# Scatterplot Matrices from the car Package
library(car)
scatterplot.matrix(~mpg+disp+drat+wt|cyl, data=mtcars,
main="Three Cylinder Options")
scatterplot.matrix(~Price+Weight+Roughness, data = robotSoundPilot)
help scatterplot.matrix()
help scatterplot.matrix
help car
?scatterplot.matrix
scatterplotMatrix(~Price+Weight+Roughness, data = robotSoundPilot)
scatterplotMatrix(~Price+Weight+Roughness, data = robotSoundPilot, smoother=FALSE)
scatterplotMatrix(~Price+Weight+Volume+Speed+Roughness+Centroid..Hz.2+Flatness+Kurtosis+Entropy+Spread+Skewness+irregularity+inharmonicity+Zerocrossing+Precision+Strength+Pleasant+Expensive+Rough+Annoying+Noisy, data = robotSoundPilot, smoother=FALSE)
scatterplotMatrix(~Price+Weight+Volume..mm_.+Speed+Roughness+Centroid..Hz.2+Flatness+Kurtosis+Entropy+Spread+Skewness+irregularity+inharmonicity+Zerocrossing+Precision+Strength+Pleasant+Expensive+Rough+Annoying+Noisy, data = robotSoundPilot, smoother=FALSE)
scatterplotMatrix(~Price+Weight+Volume..mm_.+Speed+Roughness+Centroid..Hz.2+Flatness+Kurtosis+Entropy+Spread+Skewness+irregularity+Inharmonicity+Zerocrossing+Precision+Strength+Pleasant+Expensive+Rough+Annoying+Noisy, data = robotSoundPilot, smoother=FALSE)
install.packages("corrplot")
library(corrplot)
M <- cor(mtcars)
corrplot(M, method="circle")
R = cor(robotSoundPilot)
View(M)
robotNumericalData = Price,Weight
R = cor(x[sapply(robotSoundPilot, is.numeric)])
R = cor(robotSoundPilot[sapply(robotSoundPilot, is.numeric)])
corrplot(R, method="ellipse")
corrplot(R, method="square")
library("corrplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("corrplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
corrplot(R, method="square")
load([nycflights13])
load(nycflights13)
? nycflights
nofilter_tweets_24h <- read.delim("~/GitRepos/MSE231/A1/nofilter_tweets_24h.tsv")
View(nofilter_tweets_24h)
top(nofilter_tweets_24h)
head(nofilter_tweets_24h)
library(ggplot2)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(dplyr)
library(ggplot2)
filter(nofilter_tweets_24h, TIMEZONE=="Pacific Time (US & Canada)")
group_by(nofilter_tweets_24h, TIME=="22:30", TIMEZONE="Mountain Time (US & Canada)")
count(group_by(nofilter_tweets_24h, TIME=="22:30", TIMEZONE="Mountain Time (US & Canada)"))
count(group_by(nofilter_tweets_24h, TIME=="00:30", TIMEZONE="Mountain Time (US & Canada)"))
group_by(nofilter_tweets_24h, TIME=="00:30", TIMEZONE="Mountain Time (US & Canada)")
group_by(nofilter_tweets_24h, TIME==00:30, TIMEZONE="Mountain Time (US & Canada)")
group_by(nofilter_tweets_24h, TIME==22:30, TIMEZONE="Mountain Time (US & Canada)")
typeof(nofilter_tweets_24h$TIME[1])
print(nofilter_tweets_24h$TIME[1])
head(nofilter_tweets_24h)
head(nofilter_tweets_24h)
# Create a constant to help us count the number of tweets in each dat/time/timezone bin
nofilter_tweets_24h$counter = 1
# Group by the existing dataframe
nofilter_tweets_bins = groupby(nofilter_tweets_24h, DATE, TIME, TIMEZONE)
# Summaroze the dataframe
summarise(nofilter_tweets_bins)
nofilter_tweets_bins = groupby(nofilter_tweets_24h, DATE, TIME, TIMEZONE)
nofilter_tweets_bins = group_by(nofilter_tweets_24h, DATE, TIME, TIMEZONE)
summarise(nofilter_tweets_bins)
summarise(nofilter_tweets_bins, tweet_vol=sum(counter))
install.packages("lubridate")
+                  format=c('y-m-d','h:m:s'))
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m:s'))
install.packages("chron")
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m:s'))
library(chron)
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m:s'))
nofilter_tweets_24h[,1]
nofilter_tweets_24h[,1]
nofilter_tweets_24h[,2]
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m:s'))
options(stringsAsFactors = FALSE)
nofilter_tweets_24h <- read.delim("~/GitRepos/MSE231/A1/nofilter_tweets_24h.tsv")
# Take a look at the top of the file to check it
head(nofilter_tweets_24h)
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m:s'))
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m'))
datetimes = chron(dates=nofilter_tweets_24h[,1],times=nofilter_tweets_24h[,2],format=c('y-m-d','h:m'))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
View(nofilter_tweets_bins)
binned_tweets = summarise(nofilter_tweets_bins, tweet_vol=sum(counter))
View(binned_tweets)
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
View(binned_tweets)
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
scale_x_continuous()
library(scales)
date_breaks(width = "1 hour")
date_breaks(width = "1 month")
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
scale_x_continuous(breaks = date_breaks(width = "1 month"))
date_breaks()
date_breaks(3)
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
scale_x_dates(date_breaks = date_breaks(width = "1 month"))
p + geom_line(aes(colour=TIMEZONE)) + scale_x_dates(date_breaks = date_breaks(width = "1 month"))
scale_x_dates(date_breaks = date_breaks(width = "1 month"))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
scale_x_dates(date_breaks = date_breaks(width = "1 hour"))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE), scale_x_dates(date_breaks = date_breaks(width = "1 hour")))
p + geom_line(aes(colour=TIMEZONE))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE), scale_x_dates(date_breaks ="1 hour"))
p + geom_line(aes(colour=TIMEZONE))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
P + scale_x_date(breaks = date_breaks("1 months"),labels = date_format("%m/%y"))
p + scale_x_date(breaks = date_breaks("1 months"),labels = date_format("%m/%y"))
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
p + scale_x_date(breaks = date_breaks("1 months"),labels = date_format("%m/%y"))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
p = ggplot(binned_tweets, aes(x=TIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
binned_tweets$DATETIME = paste(binned_tweets$DATE, binned_tweets$TIME)
View(binned_tweets)
?asposixct
binned_tweets$DATETIME = as.POSIXct(paste(binned_tweets$DATE, binned_tweets$TIME))
View(binned_tweets)
?qplot
qplot(x=DATETIME, y=tweet_vol)
qplot(x=binned_tweets$DATETIME, y=bined_tweets$tweet_vol)
qplot(x=binned_tweets$DATETIME, y=binned_tweets$tweet_vol)
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
# Take a look at the top of the file to check it
head(nofilter_tweets_24h)
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE))
p + geom_line(aes(colour=TIMEZONE))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.position=c(.5, .5)) #put the legend in the main area of the plot
print(p) # show the plot [4]
theme(legend.position=c(.75, .75)) #put the legend in the main area of the plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.position=c(.75, .75)) #put the legend in the main area of the plot
print(p) # show the plot [4]
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.position=c(.85, .85)) #put the legend in the main area of the plot
print(p) # show the plot [4]
theme(legend.position=c(.75, .85)) #put the legend in the main area of the plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.position=c(.75, .85)) #put the legend in the main area of the plot
print(p) # show the plot [4]
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.position=c(.80, .85)) #put the legend in the main area of the plot
print(p) # show the plot [4]
# plot the data on a line plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
opts(legend.justification = c(1, 1), legend.position = c(1, 1)) # [3]
print(p) # show the plot [4]
# plot the data on a line plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
opts(legend.justification = c(1, 1), legend.position = c(1, 1)) # [3]
print(p) # show the plot [4]
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
opts(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume")
print(p) # show the plot [4]
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume")
print(p) # show the plot [4]
# plot the data on a line plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_point(aes(colour=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume")
print(p) # show the plot [4]
# plot the data on a line plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_point(aes(colour=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume") +
scale_x_date(date_breaks = "1 day", date_labels = "%d")
print(p) # show the plot [4]
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_point(aes(colour=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume") +
scale_x_date(date_breaks = "1 hour", date_labels = "%h")
print(p) # s
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
Results.V2 <- read.csv("~/Downloads/Results V2.csv")
View(Results.V2)
?dplyr:select
# Install, if you haven t already.
# Only need to do this once on a single machine.
install.packages( dplyr )
# load package into workspace
library( dplyr )
flights_by_day <- group_by(flights, day)
library(dplyr)
flights
?nycflights13
flights  <- nycflights13
load(nycflights13_sqlite())
nycflights13_sqlite(path = NULL)
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
flights
info <- data.frame(
name=c( tony ,  tony ,  rey ),
job=c( scientist ,  tiger ,  scavenger ),
score=rnorm(3))
power <- data.frame(
name=c( tony ,  hank ,  rey ),
job=c( scientist ,  scientist ,  scavenger ),
strength=rexp(3))
info <- data.frame(
name=c( 'tony' ,  'tony' ,  'rey' ),
job=c( 'scientist' ,  'tiger' ,  'scavenger' ),
score=rnorm(3))
power <- data.frame(
name=c( 'tony' ,  'hank' ,  'rey' ),
job=c( 'scientist' ,  'scientist' ,  'scavenger' ),
strength=rexp(3))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
ggsave(plot=p, file='no_filter.pdf', width=7, height=6)
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
# plot the data on a line plot
p = ggplot(binned_tweets, aes(x=DATETIME, y=tweet_vol, group=TIMEZONE)) +
geom_point(aes(colour=TIMEZONE)) +
geom_line(aes(colour=TIMEZONE)) + # factor by timezone
theme(legend.justification = c(1, 1), legend.position = c(1, 1)) + # legend in topright [3]
xlab("Time") + ylab("Tweet Volume") + ggtitle("Tweet Volume: No Filter")
print(p) # show the plot [4]
ggsave(plot=p, file='no_filter.pdf', width=7, height=6)
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
View(binned_tweets)
snl_time = as.POSIXct(paste("2016-09-27", "20:30"))
p + geom_vline(xintercept = snl_time)
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
View(binned_tweets)
snl_time = as.POSIXct(paste("2016-09-27", "20:30"))
p + geom_vline(as.numeric(xintercept = snl_time))
snl_time = as.POSIXct(paste("2016-09-27", "20:30"))
p + geom_vline(xintercept = as.numeric(snl_time))
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
snl_time = as.POSIXct(paste("2016-10-01", "20:30"))
p + geom_vline(xintercept = as.numeric(snl_time))
# add a vertical line to the plot at 20:30 (the premiere of SNL)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est)) + geom_vline(xintercept = as.numeric(snl_time_west))
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash")
+ geom_vline(xintercept = as.numeric(snl_time_west), linetype = "longdash")
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash") +
geom_vline(xintercept = as.numeric(snl_time_west),linetype = "longdash")
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash", color="grey") +
geom_vline(xintercept = as.numeric(snl_time_west),linetype = "longdash", color="grey")
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash", color="red") +
geom_vline(xintercept = as.numeric(snl_time_west),linetype = "longdash", color="grey")
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash", color="red") +
geom_vline(xi
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash", color="red") +
geom_vline(xintercept = as.numeric(snl_time_west),linetype = "longdash", color="grey")
# add a vertical line to the plot at 20:30 (the premiere of SNL on the east coast)
snl_time_est = as.POSIXct(paste("2016-10-01", "20:30"))
snl_time_west = as.POSIXct(paste("2016-10-01", "23:30"))
p + geom_vline(xintercept = as.numeric(snl_time_est),linetype = "longdash", color="grey") +
geom_vline(xintercept = as.numeric(snl_time_west),linetype = "longdash", color="grey")
pwd
pwd()
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
getwd()
setwd("~/GitRepos/MSE231/A1")
getwd()
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
this.dir <- dirname(parent.frame(2)$ofile)
setwd(getSrcDirectory()[1])
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
binned_snl = snl_tweets %>%
group_by(DATE, TIME, TIMEZONE) %>%
summarise(tweet_vol=sum(counter))
binned_snl = snl_tweets_24h %>%
group_by(DATE, TIME, TIMEZONE) %>%
summarise(tweet_vol=sum(counter))
snl_tweets_24h$counter = 1
binned_snl = snl_tweets_24h %>%
group_by(DATE, TIME, TIMEZONE) %>%
summarise(tweet_vol=sum(counter))
View(binned_tweets)
View(binned_snl)
binned_snl$DATETIME = as.POSIXct(paste(binned_snl$DATE, binned_snl$TIME))
View(binned_snl)
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
source('~/GitRepos/MSE231/A1/tweet_analysis.R')
setwd("~/Downloads")
source('~/Downloads/tweet_analysis-3.R')
